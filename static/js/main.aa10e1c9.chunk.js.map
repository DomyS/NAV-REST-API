{"version":3,"sources":["components/Card/Card.module.css","components/Card/Card.js","components/Pagination/Pagination.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","children","className","styles","mainCard","Pagination","props","pageLinks","i","active","currentPage","push","key","onClick","nextPage","href","App","closeModal","setState","openedDialog","displayContent","id","pageNumber","fetch","method","headers","Authorization","then","response","json","myJson","content","console","log","open","showModal","close","handleAileClick","event","state","shoppingCart","newList","filter","item","target","value","items","localStorage","setItem","JSON","stringify","getItem","handleCartClick","persist","prevState","totalResults","this","hydrateStateWithLocalStorage","hasOwnProperty","parse","e","numberPages","Math","floor","aisleList","map","index","cleanedDate","Date","published","toLocaleDateString","jobtitle","title","uuid","Container","Row","Col","md","employer","name","stopPropagation","Modal","show","onHide","Header","closeButton","Title","Body","dangerouslySetInnerHTML","__html","description","extent","applicationDue","Footer","Button","cartList","Badge","variant","length","pages","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa10e1c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainCard\":\"Card_mainCard__1i-tw\"};","import React from \"react\";\r\nimport styles from \"./Card.module.css\";\r\n\r\nconst Card = ({ children }) => {\r\n  return <div className={styles.mainCard}>{children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./Pagination.css\";\r\n\r\nconst Pagination = props => {\r\n  const pageLinks = [];\r\n\r\n  for (let i = 1; i <= 10; i++) {\r\n    let active = props.currentPage === i ? \"active\" : \"\";\r\n    pageLinks.push(\r\n      <li\r\n        className={`page-link ${active}`}\r\n        key={i}\r\n        onClick={() => props.nextPage(i)}\r\n      >\r\n        <a href=\"#\">{i}</a>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <ul className=\"pagination pagination-md\">{pageLinks}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Card from \"./components/Card/Card\";\nimport Pagination from \"./components/Pagination/Pagination\";\nimport { Container, Col, Row, Modal, Button, Badge } from \"react-bootstrap\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: [],\n      currentPage: 1,\n      totalResults: 0,\n      shoppingCart: []\n    };\n  }\n\n  /* specifying each item to open each modal */\n  closeModal = () => {\n    this.setState({\n      openedDialog: null\n    });\n  };\n\n  displayContent = id => {\n    this.setState({\n      openedDialog: id\n    });\n  };\n\n  /* NAV REST API */\n\n  componentDidMount() {\n    this.hydrateStateWithLocalStorage();\n    fetch(`https://arbeidsplassen.nav.no/public-feed/api/v1/ads?size=10`, {\n      method: \"GET\",\n      headers: {\n        Authorization:\n          \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJwdWJsaWMudG9rZW4udjFAbmF2Lm5vIiwiYXVkIjoiZmVlZC1hcGktdjEiLCJpc3MiOiJuYXYubm8iLCJpYXQiOjE1NTc0NzM0MjJ9.jNGlLUF9HxoHo5JrQNMkweLj_91bgk97ZebLdfx3_UQ\"\n      }\n    })\n      .then(response => {\n        return response.json();\n      })\n      .then(myJson => {\n        console.log(myJson);\n        this.setState({\n          content: myJson.content\n        });\n      });\n  }\n\n  /* pagination */\n  nextPage = pageNumber => {\n    fetch(\n      `https://arbeidsplassen.nav.no/public-feed/api/v1/ads?size=10&page=${pageNumber}`,\n      {\n        method: \"GET\",\n        headers: {\n          Authorization:\n            \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJwdWJsaWMudG9rZW4udjFAbmF2Lm5vIiwiYXVkIjoiZmVlZC1hcGktdjEiLCJpc3MiOiJuYXYubm8iLCJpYXQiOjE1NTc0NzM0MjJ9.jNGlLUF9HxoHo5JrQNMkweLj_91bgk97ZebLdfx3_UQ\"\n        }\n      }\n    )\n      .then(response => {\n        return response.json();\n      })\n      .then(myJson => {\n        //console.log(myJson);\n        this.setState({\n          content: myJson.content,\n          currentPage: pageNumber\n        });\n        console.log(pageNumber);\n      });\n  };\n\n  /* Saved Items */\n  /* saved items modal */\n  open = () => {\n    this.setState({ showModal: true });\n  };\n\n  close = () => {\n    this.setState({ showModal: false });\n  };\n\n  /* job save button onclick event */\n  handleAileClick = event => {\n    const { content = [], shoppingCart = [] } = this.state;\n\n    let newList = content.filter(item => {\n      return item !== event.target.value;\n    });\n\n    this.setState({\n      items: [...newList],\n      shoppingCart: [...shoppingCart, event.target.value]\n    });\n\n    localStorage.setItem(\"shoppingCart\", JSON.stringify(shoppingCart));\n    localStorage.getItem(\"shoppingCart\");\n  };\n\n  /* hydrate the state with local storage */\n  hydrateStateWithLocalStorage() {\n    // for all items in state\n    for (let key in this.state) {\n      // if the key exists in localStorage\n      if (localStorage.hasOwnProperty(key)) {\n        // get the key's value from localStorage\n        let value = localStorage.getItem(key);\n\n        // parse the localStorage string and setState\n        try {\n          //JSON.parse converts a JSON string into a JavaScript value\n          value = JSON.parse(value);\n          this.setState({ [key]: value });\n        } catch (e) {\n          // handle empty string\n          this.setState({ [key]: value });\n        }\n      }\n    }\n  }\n\n  /* button delete in saved jobs works with first load */\n  handleCartClick = event => {\n    event.persist();\n    console.log(event.target.value);\n    this.setState(prevState => {\n      return {\n        items: [...prevState.items, event.target.value],\n        shoppingCart: prevState.shoppingCart.filter(item => {\n          return item !== event.target.value;\n        })\n      };\n    });\n  };\n\n  /* saved items end */\n\n  render() {\n    var { shoppingCart = [] } = this.state;\n\n    /* pagination */\n    const numberPages = Math.floor(this.state.totalResults / 20);\n\n    /* main mapped information*/\n    let aisleList = this.state.content.map((item, index) => {\n      /* fixed formating of the publishing date*/\n      const cleanedDate = new Date(item.published).toLocaleDateString();\n\n      const { jobtitle, title } = item;\n\n      return (\n        <div className=\"cards\" key={item.uuid}>\n          <Card key={item.uuid}>\n            <Container>\n              <Row>\n                <Col md={3}>\n                  <h5>\n                    <strong>{item.employer.name}</strong>\n                  </h5>\n                </Col>\n                <Col className=\"cardRight\" md={7}>\n                  <p>{cleanedDate}</p>\n                  <h6>\n                    <strong>{jobtitle}</strong>\n                  </h6>\n                  <h6>{title}</h6>\n                </Col>\n                <Col md={2}>\n                  <div className=\"buttons\">\n                    {/* save button  */}\n                    <button\n                      className=\"btn btn-outline-info\"\n                      id={index}\n                      value={item.jobtitle}\n                      onClick={this.handleAileClick}\n                    >\n                      Lagre\n                    </button>\n                    {/* open button and modal */}\n                    <button\n                      className=\"btn btn-outline-info\"\n                      onClick={() => this.displayContent(item.uuid)}\n                    >\n                      Åpne\n                      <div onClick={e => e.stopPropagation()}>\n                        <Modal\n                          show={this.state.openedDialog === item.uuid}\n                          onHide={this.closeModal}\n                        >\n                          <Modal.Header closeButton={true}>\n                            <Modal.Title>{jobtitle}</Modal.Title>\n                          </Modal.Header>\n                          <Modal.Body>\n                            <h4>{item.employer.name}</h4>\n                            <div\n                              dangerouslySetInnerHTML={{\n                                __html: item.description\n                              }}\n                            />\n                            <h5>{item.extent}</h5>\n                            <h5>Søknadsfrist: {item.applicationDue}</h5>\n                          </Modal.Body>\n                          <Modal.Footer>\n                            <Button onClick={this.closeModal}>Close</Button>\n                          </Modal.Footer>\n                        </Modal>\n                      </div>\n                    </button>\n                    {/* end open button and modal */}\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </Card>\n        </div>\n      );\n    });\n\n    /* list of saved jobs to saved jobs*/\n    let cartList = shoppingCart.map((item, index) => {\n      return (\n        <div className=\"savedJobs\" key={item.uuid}>\n          <span>{item}</span>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"App\">\n        <div className=\"savedModal\">\n          {/* saved jobs modal */}\n          <Button className=\"btn btn-info\" onClick={this.open}>\n            Lagrede Jobber <Badge variant=\"light\">{shoppingCart.length}</Badge>\n          </Button>\n\n          <Modal show={this.state.showModal} onHide={this.close}>\n            <Modal.Header closeButton>\n              <Modal.Title>\n                lagrede jobber{\" \"}\n                <Badge variant=\"dark\">{shoppingCart.length}</Badge>\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div>{cartList}</div>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button onClick={this.close}>Close</Button>\n            </Modal.Footer>\n          </Modal>\n        </div>\n\n        {/* job list */}\n        <h2 className=\"heading2\">Ledige Stillinger</h2>\n        {aisleList}\n\n        <Pagination\n          pages={numberPages}\n          nextPage={this.nextPage}\n          currentPage={this.state.currentPage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}